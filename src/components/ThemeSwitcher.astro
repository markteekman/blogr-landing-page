<div class="flex flex-col items-center mt-16">
  <p class="mb-4">
    <span class="magic">
      <span class="magic-star">
        <svg viewBox="0 0 512 512">
        <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
        </svg>
      </span>
      <span class="magic-star">
        <svg viewBox="0 0 512 512">
        <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
        </svg>
      </span>
      <span class="magic-star">
        <svg viewBox="0 0 512 512">
        <path d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z" />
        </svg>
      </span>
      <span class="magic-text text-lg uppercase font-bold">Choose a color theme</span>
    </span>
  </p>
  <ul id="theme-switcher">
  <li>
    <button aria-pressed="false" title="Switch to the DEFAULT theme" data-value="default">
      <span />
    </button>
  </li>
  <li>
    <button aria-pressed="false" title="Switch to the COCEAN theme" data-value="ocean">
      <span />
    </button>
  </li>
  <li>
    <button aria-pressed="false" title="Switch to the JUNGLE theme" data-value="jungle">
      <span />
    </button>
  </li>
  <li>
    <button aria-pressed="false" title="Switch to the ROYAL theme" data-value="royal">
      <span />
    </button>
  </li>
  <li>
    <button aria-pressed="false" title="Switch to the SUNNY theme" data-value="sunny">
      <span />
    </button>
  </li>
  </ul>
</div>

<script>
  // switch themes
  const html = document.querySelector('html')
  const currentTheme = localStorage.getItem('theme')
  const themeSwitcher = document.querySelector('#theme-switcher')
  const themeSwitcherButtons = themeSwitcher.querySelectorAll('button')

  themeSwitcher.addEventListener('click', event => {
    const currentButton = event.target.closest('button')
    if (!currentButton) return

    const currentTheme = currentButton.dataset.value
    html.dataset.theme = currentTheme
    localStorage.setItem('theme', currentTheme)

    themeSwitcherButtons.forEach(button => button.setAttribute('aria-pressed', 'false'))
    currentButton.setAttribute('aria-pressed', 'true')
  })

  themeSwitcherButtons.forEach(button => {
    button.setAttribute('aria-pressed', 'false')

    if (button.dataset.value === currentTheme) {
      button.setAttribute('aria-pressed', 'true')
      html.dataset.theme = currentTheme
    }
  })
  html.dataset.theme = currentTheme

  // magic stars effect
  let index = 0
  let interval = 1000

  const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min

  const animate = star => {
    star.style.setProperty('--star-left', `${rand(-10, 100)}%`)
    star.style.setProperty('--star-top', `${rand(-40, 80)}%`)

    star.style.animation = 'none'
    star.offsetHeight
    star.style.animation = ''
  }

  for (const star of document.getElementsByClassName('magic-star')) {
    setTimeout(() => {
      animate(star)
      
      setInterval(() => animate(star), 1500)
    }, index++ * (interval / 4))
  }
</script>

<style lang="scss">
  #theme-switcher {
    display: flex;
    gap: 1rem;

    li {
      display: flex;
      align-items: center;
    }

    button {
      padding: 0;
      border: none;

      span {
        display: block;
        width: 2rem;
        height: 2rem;
        border-radius: 50%;
        outline: 2px solid transparent;
        outline-offset: 3px;
        transition: outline 0.2s ease-in-out;
      }

      &[data-value="default"] span { 
        background-image: var(--default-gradient);
      }

      &[data-value="ocean"] span { 
        background-image: var(--ocean-gradient);
      }

      &[data-value="jungle"] span { 
        background-image: var(--jungle-gradient);
      }

      &[data-value="royal"] span { 
        background-image: var(--royal-gradient);
      }

      &[data-value="sunny"] span { 
        background-image: var(--sunny-gradient);
      }

      &:hover,
      &:focus,
      &[aria-pressed="true"] {
        span {
          outline-color: black;
        }
      }
    }
  }

  .magic {
    display: inline-block;
    position: relative;
  }

  .magic-star {
    --size: clamp(10px, 1vw, 20px);
    animation: scale 1s ease forwards;
    display: block;
    height: var(--size);
    left: var(--star-left);
    position: absolute;
    top: var(--star-top);
    width: var(--size);

    svg {
      animation: rotate 1000ms linear infinite;
      display: block;
      opacity: 0.8;

      path {
        fill: rgb(103, 58, 183);
      }
    }
  }

  .magic-text {
    animation: background-pan 3s linear infinite;
    background: linear-gradient(
      to right,
      rgb(123, 31, 162),
      rgb(103, 58, 183),
      rgb(244, 143, 177),
      rgb(123, 31, 162)
    );
    background-size: 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    white-space: nowrap;
    font-family: var(--font-family-special);
  }

  @keyframes background-pan {
    from {
      background-position: 0% center;
    }
    
    to {
      background-position: -200% center;
    }
  }

  @keyframes scale {
    from, to {
      transform: scale(0);
    }
    
    50% {
      transform: scale(1);
    }
  }

  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    
    to {
      transform: rotate(180deg);
    }
  }
</style>

<style lang="scss" is:global>
  :root {
    --default-gradient: linear-gradient(90deg, hsl(13, 100%, 72%) 0%, hsl(353, 100%, 62%) 100%);
    --ocean-gradient: linear-gradient(90deg, hsl(211, 93%, 72%) 0%, hsl(211, 79%, 41%) 100%);
    --jungle-gradient: linear-gradient(90deg, hsl(88, 49%, 48%) 0%, hsl(88, 85%, 28%) 100%);
    --royal-gradient: linear-gradient(90deg, hsl(245, 84%, 78%) 0%, hsl(245, 74%, 66%) 100%);
    --sunny-gradient: linear-gradient(90deg, hsl(47, 100%, 63%) 0%, hsl(47, 100%, 54%) 100%);
  }

  [data-theme="default"] {
    --theme-gradient-cta: var(--default-gradient);
    --theme-cta-text: hsl(356, 100%, 70%);
    --theme-hero-filter: none;
    --theme-image-filter: none;
  }

  [data-theme="ocean"] {
    --theme-gradient-cta: var(--ocean-gradient);
    --theme-cta-text: hsl(211, 93%, 72%);
    --theme-hero-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(210deg) brightness(100%) contrast(100%);
    --theme-image-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(210deg) brightness(100%) contrast(100%);
  }

  [data-theme="jungle"] {
    --theme-gradient-cta: var(--jungle-gradient);
    --theme-cta-text: hsl(88, 49%, 48%);
    --theme-hero-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(90deg) brightness(100%) contrast(100%);
    --theme-image-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(90deg) brightness(100%) contrast(100%);
  }

  [data-theme="royal"] {
    --theme-gradient-cta: var(--royal-gradient);
    --theme-cta-text: hsl(245, 84%, 78%);
    --theme-hero-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(250deg) brightness(100%) contrast(100%);
    --theme-image-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(250deg) brightness(100%) contrast(100%);
  }
  
  [data-theme="sunny"] {
    --theme-gradient-cta: var(--sunny-gradient);
    --theme-cta-text: hsl(47, 100%, 63%);
    --theme-hero-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(50deg) brightness(140%) contrast(100%);
    --theme-image-filter: invert(0%) sepia(0%) saturate(100%) hue-rotate(50deg) brightness(140%) contrast(100%);
  }
</style>
